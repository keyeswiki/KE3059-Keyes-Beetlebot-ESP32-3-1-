搬运机器人教程
==============

搬运机器人简介：
----------------

在众多的工业机器人中，搬运机器人无疑是应用率较高的机器人之一，不管是在工业制造、仓储物流、烟草、医药、食品、化工等行业领域，还是在邮局、图书馆、港口码头、机场、停车场等场景，都可以见到搬运机器人的身影。在本实验中，我们也利用乐高积木搭建了一款搬运机器人来搬运东西。

安装APP:
--------

**⚠️<span style=“color: rgb(255,76,65);”>特别提示：**
如果APP已下载安装好，则跳过此步骤；如果没有，请参考链接的安装说明：\ `项目18：读取APP按钮字符串 <https://www.keyesrobot.cn/projects/KE3059/zh-cn/latest/docs/Arduino%E6%95%99%E7%A8%8B.html#app>`__
。

搬运机器人形态安装步骤：
------------------------

**安装1**

将超声波云台拆下：

|Img|

安装所需零件：

|image1|

安装：

|image2|

完成：

|image3|

**安装2**

安装所需零件：

|image4|

安装：

|image5|

完成：

|image6|

**安装3**

安装所需零件：

|image7|

安装：

|image8|

完成：

|image9|

**安装4**

安装所需零件：

|image10|

安装：

|image11|

完成：

|image12|

**安装5**

安装所需零件：

|image13|

安装：

|image14|

完成：

|image15|

**安装6**

安装所需零件：

|image16|

安装：

|image17|

完成：

|image18|

**安装7**

安装所需零件：

|image19|

安装：

|image20|

完成：

|image21|

**安装8**

安装所需零件：

|image22|

安装：

（\ **注意舵机线的位置**\ ）

|image23|

完成：

|image24|

**安装9**

安装所需零件：

|image25|

\ **安装前需调节舵机角度为180°。**\ 

将舵机的线接到PCB上板的S2接口：

====== ============
舵机   小车PCB板
====== ============
棕线   G
红线   5V
橙黄线 S2（GPIO23）
====== ============

|image26|

\ **将舵机角度初始化的代码上传到Beetlebot小车上的ESP32主板上，如下所示：**\ 

**方法一：Arduino 代码：**

.. code:: c

   //*************************************************************************************
   #include <Arduino.h>
   #include <ESP32Servo.h>

   Servo myservo;  // 创建舵机对象来控制舵机

   int servoPin = 23; // 舵机引脚

   void setup() {
     myservo.setPeriodHertz(50);           // 标准50赫兹舵机
     myservo.attach(servoPin, 500, 2500);  // 将servoPin上的舵机附加到舵机对象上

     myservo.write(180);  // 舵机角度为 180°.
     delay(1000);
     myservo.write(90);  // 舵机角度为 90°.
     delay(1000);
     myservo.write(180);  // 舵机角度为 180°.
     delay(1000);
   }
   void loop() {

   }
   //*************************************************************************************

上面的Arduino代码在资料中有提供，打开舵机的调整代码并烧录到Beetlebot的ESP32主板，上传完成。代码如下图位置：

|image27|

**方法二：KidsBlock(Scratch)代码：**

也可以使用下面的KidsBlock(Scratch)代码来调整舵机初始化角度.

|image28|

KidsBlock(Scratch)代码在资料中也有提供，打开舵机的调整代码并烧录到Beetlebot的ESP32主板，上传完成。代码如下图位置:

|image29|

安装：

（\ **安装姿势与下图一致**\ ）

|image30|

完成：

|image31|

**安装10**

安装所需零件：

|image32|

安装1：

|image33|

安装2：

|image34|

安装2完成：

|image35|

安装3：

|image36|

完成：

|image37|

**搬运机器人形态安装完成**

|image38|

**灰色乐高舵机接线图：**

====== ============
舵机   小车PCB板
====== ============
棕线   G
红线   5V
橙黄线 S2（GPIO23）
====== ============

|image39|

|image40|

搬运机器人Arduino代码:
----------------------

**注意：手机或平板一定要与ESP32开发板连接的是同一个wifi，否则将无法进入控制页面，还有就是ESP32开发板在使用WiFi功能时功耗很大需要外接DC电源才能满足他的工作电力需求，如果达不到他的工作电力需求ESP32板将会一直复位导致代码无法正常运行。**

⚠️\ **注意：**
上传代码前，请将代码中的WiFi名称（REPLACE_WITH_YOUR_SSID）和密码（REPLACE_WITH_YOUR_PASSWORD）替换为您自己的WiFi名称和密码。

.. code:: c

   #include <WiFi.h>
   #include <ESPmDNS.h>
   #include <WiFiClient.h>

   #include <ESP32Servo.h>
   //电机
   #define left_ctrl  33  //左电机的方向控制引脚 gpio33
   #define left_pwm  26   //左电机的PWM控制引脚 gpio26
   #define right_ctrl  32 //右电机的方向控制引脚 gpio32
   #define right_pwm  25  //右电机的PWM控制引脚 gpio25

   /*替换为您的网络凭据（输入您的SSID和密码）*/
   const char* ssid = "REPLACE_WITH_YOUR_SSID"; //此处输入SSID
   const char* password = "REPLACE_WITH_YOUR_PASSWORD"; //此处输入密码
   // 端口80的TCP服务器将响应HTTP请求
   WiFiServer server(80);

   //舵机
   const int servoPin = 23;//设置舵机引脚为gpio23
   Servo myservo;  // 创建舵机对象来控制舵机

   void setup(void)
   {
       Serial.begin(115200);
       pinMode(left_ctrl,OUTPUT); //将左电机控制引脚设置为OUTPUT
       ledcAttach(left_pwm, 1200, 8); //设置left_pwm引脚的频率为1200，PWM分辨率为8，占空比为256。
       pinMode(right_ctrl,OUTPUT);//设置右侧电机方向控制引脚为OUTPUT
       ledcAttach(right_pwm, 1200, 8); //设置right_pwm引脚的频率为1200，PWM分辨率为8，占空比为256。
     
       myservo.setPeriodHertz(50);           // 标准50赫兹舵机
       myservo.attach(servoPin, 500, 2500);  // 将servoPin上的舵机附加到舵机对象上
       myservo.write(180);  // 舵机的初始角度设置为180°
       delay(300);

       // 连接WiFi网络
       WiFi.begin(ssid, password);
       Serial.println("");

       // 等待连接
       while (WiFi.status() != WL_CONNECTED) {
           delay(500);
           Serial.print(".");
       }
       Serial.println("");
       Serial.print("Connected to ");
       Serial.println(ssid);
       Serial.print("IP address: ");
       Serial.println(WiFi.localIP());

       // 设置mDNS响应器：
       // - 在本例中，第一个参数是域名
       //   全限定域名是“esp32.local”
       // - 第二个参数是要发布的IP地址
       //   我们通过WiFi网络发送我们的IP地址
       if (!MDNS.begin("esp32")) {
           Serial.println("Error setting up MDNS responder!");
           while(1) {
               delay(1000);
           }
       }
       Serial.println("mDNS responder started");

       // 启动TCP （HTTP）服务器
       server.begin();
       Serial.println("TCP server started");

       // 向mmds - sd添加业务
       MDNS.addService("http", "tcp", 80);
   }

   void loop(void)
   {
       // 检查客户端是否已连接
       WiFiClient client = server.available();
       if (!client) {
           return;
       }
       //Serial.println("");
       //Serial.println("New client");

       // 等待来自客户端的数据变为可用
       while(client.connected() && !client.available()){
           delay(1);
       }

       // 读取HTTP请求的第一行
       String req = client.readStringUntil('\r');
       //Serial.println(req);
       // HTTP请求的第一行看起来像“GET /path HTTP/1.1”
       // 通过查找空格来检索“/path”部分
       int addr_start = req.indexOf(' ');
       int addr_end = req.indexOf(' ', addr_start + 1);
       if (addr_start == -1 || addr_end == -1) {
           //Serial.print("Invalid request: ");
           //Serial.println(req);
           return;
       }
       req = req.substring(addr_start + 1, addr_end);
       //Serial.print("Request: ");
       Serial.println(req);
       String s;
       if (req == "/")
       {
           IPAddress ip = WiFi.localIP();
           String ipStr = String(ip[0]) + '.' + String(ip[1]) + '.' + String(ip[2]) + '.' + String(ip[3]);
           s = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\n\r\n<!DOCTYPE HTML>\r\n<html>Hello from ESP32 at ";
           s += ipStr;
           s += "</html>\r\n\r\n";
           Serial.println("Sending 200");
           client.println(WiFi.localIP());
       }
       else if(req == "/btn/F")
       {
         digitalWrite(left_ctrl,LOW); //将左电机方向控制引脚设为LOW。
         ledcWrite(left_pwm, 150); //左电机输出PWM 150
         digitalWrite(right_ctrl,LOW); //将右电机的控制引脚设置为LOW。
         ledcWrite(right_pwm, 150); //右电机输出PWM 150
       }
       else if(req == "/btn/B")
       {
         digitalWrite(left_ctrl, HIGH);
         ledcWrite(left_pwm, 150);
         digitalWrite(right_ctrl, HIGH);
         ledcWrite(right_pwm, 150);
       }
       else if(req == "/btn/L")
       {
         digitalWrite(left_ctrl,HIGH); 
         ledcWrite(left_pwm, 150); 
         digitalWrite(right_ctrl,LOW); 
         ledcWrite(right_pwm, 150);
       }
       else if(req == "/btn/R")
       {
         digitalWrite(left_ctrl,LOW); 
         ledcWrite(left_pwm, 150); 
         digitalWrite(right_ctrl,HIGH); 
         ledcWrite(right_pwm, 150);
       }
       else if(req == "/btn/S")
       {
         digitalWrite(left_ctrl,LOW);
         ledcWrite(left_pwm, 0);
         digitalWrite(right_ctrl,LOW);
         ledcWrite(right_pwm, 0); 
       }
       else if(req == "/btn/p")
       {
         Serial.write('p');
         myservo.write(130);
         delay(200);
       }
       else if(req == "/btn/q")
       {
         Serial.write('q');
         client.println("q");
       }
       else if(req == "/btn/x")
       {
         myservo.write(180);
         delay(200);
       }
   }

搬运机器人Kidsblock代码:
------------------------

**注意：手机或平板一定要与ESP32开发板连接的是同一个wifi，否则将无法进入控制页面，还有就是ESP32开发板在使用WiFi功能时功耗很大需要外接DC电源才能满足他的工作电力需求，如果达不到他的工作电力需求ESP32板将会一直复位导致代码无法正常运行。**

⚠️\ **注意：**
上传代码前，请将代码中的WiFi名称（REPLACE_WITH_YOUR_SSID）和密码（REPLACE_WITH_YOUR_PASSWORD）替换为您自己的WiFi名称和密码。

|image41|

搬运机器人实验结果：
--------------------

1. 打开IDE的串口监视器，读取WiFi
IP地址，然后在投石攻城车项目实验中，投石攻城车抛乐高积木块击打目标物A、B、C、D散落满地的一些乐高积木。

2.
APP连上WiFi，操作APP上的小车方向按钮\ |image42|\ 使搬运机器人移动到散落满地的乐高积木旁。

3.
用手拣一些小的乐高积木块放到铲斗上，操作APP上的小车方向按钮\ |image43|\ 使搬运机器人把乐高积木搬运到原始位置。按住按钮\ |image44|\ ，舵机转动一定角度带动齿轮使铲斗升起，这样，运送的乐高积木块就掉下来。

4. 重复上面的操作方法，把所有的乐高积木块都搬运到原始位置。

.. |Img| image:: ./media/img-20230406135222.png
.. |image1| image:: ./media/img-20230406135246.png
.. |image2| image:: ./media/img-20230406135305.png
.. |image3| image:: ./media/img-20230406135326.png
.. |image4| image:: ./media/img-20230406135421.png
.. |image5| image:: ./media/img-20230406135430.png
.. |image6| image:: ./media/img-20230406135443.png
.. |image7| image:: ./media/img-20230406135609.png
.. |image8| image:: ./media/img-20230406135626.png
.. |image9| image:: ./media/img-20230406135635.png
.. |image10| image:: ./media/img-20230406135654.png
.. |image11| image:: ./media/img-20230406135704.png
.. |image12| image:: ./media/img-20230406135715.png
.. |image13| image:: ./media/img-20230406135751.png
.. |image14| image:: ./media/img-20230406135800.png
.. |image15| image:: ./media/img-20230406135812.png
.. |image16| image:: ./media/img-20230406135832.png
.. |image17| image:: ./media/img-20230406135840.png
.. |image18| image:: ./media/img-20230406135851.png
.. |image19| image:: ./media/img-20230406135908.png
.. |image20| image:: ./media/img-20230406135916.png
.. |image21| image:: ./media/img-20230406135926.png
.. |image22| image:: ./media/img-20230406135944.png
.. |image23| image:: ./media/img-20230504151026.png
.. |image24| image:: ./media/img-20230504151033.png
.. |image25| image:: ./media/img-20230406140020.png
.. |image26| image:: ./media/img-20230518115057.png
.. |image27| image:: ./media/img-20250427135402.png
.. |image28| image:: ./media/img-20250427135513.png
.. |image29| image:: ./media/img-20250427135442.png
.. |image30| image:: ./media/img-20230406140854.png
.. |image31| image:: ./media/img-20230406140912.png
.. |image32| image:: ./media/img-20230406140943.png
.. |image33| image:: ./media/img-20230406141005.png
.. |image34| image:: ./media/img-20230406141020.png
.. |image35| image:: ./media/img-20230406141150.png
.. |image36| image:: ./media/img-20230406141156.png
.. |image37| image:: ./media/img-20230406141211.png
.. |image38| image:: ./media/img-20230406141937.png
.. |image39| image:: ./media/img-20230518115057.png
.. |image40| image:: ./media/img-20230505143859.png
.. |image41| image:: ./media/img-20250427140226.png
.. |image42| image:: ./media/img-20230406145116.png
.. |image43| image:: ./media/img-20230406145136.png
.. |image44| image:: ./media/img-20230406145157.png
